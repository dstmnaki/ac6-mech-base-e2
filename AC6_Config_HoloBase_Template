@name AC6_Config_HoloBase_Template
@persist Height Walk_Speed Move_Speed Boost_Speed Length1 Length2 FootHeight
if(first()){
    Height=220
    Walk_Speed=100
    Move_Speed=150
    Boost_Speed=600
    
    Length1=94
    Length2=116.6
    FootHeight=25
    
    I++, HN++, HT[HN,array] = array(I, BaseEnt, noentity(), 0, vec(0, 0, 0), ang(0, 0, 0), vec(ShowBones), ""),Bones["root",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["root",number], noentity(), 0, vec(0, 0, 32), ang(0, 0, 0), vec(ShowBones), ""),Bones["torso",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["torso",number], noentity(), 0, vec(0, 0, -6), ang(0, 0, 0), vec(ShowBones), ""),Bones["pelvis",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["torso",number], noentity(), 0, vec(-1.95,0,99), ang(0, 0, 0), vec(ShowBones), ""),Bones["head",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["torso",number], noentity(), 0, vec(-11.54,88.76,74.09), ang(0, 0, 0), vec(ShowBones), ""),Bones["left_shoulder",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["torso",number], noentity(), 0, vec(-11.54,-88.76,74.09), ang(0, 0, 0), vec(ShowBones), ""),Bones["right_shoulder",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["torso",number], noentity(), 0, vec(-11.54,88.76,74.09), ang(0, 0, 0), vec(ShowBones), ""),Bones["left_upperarm",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["torso",number], noentity(), 0, vec(-11.54,-88.76,74.09), ang(0, 0, 0), vec(ShowBones), ""),Bones["right_upperarm",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["left_upperarm",number], noentity(), 0, vec(0,0,-68.80), ang(0, 0, 0), vec(ShowBones), ""),Bones["left_forearm",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["right_upperarm",number], noentity(), 0, vec(0,0,-68.80), ang(0, 0, 0), vec(ShowBones), ""),Bones["right_forearm",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["pelvis",number], noentity(), 0, vec(0.99,-69.14,-38.12), ang(0, 0, 0), vec(ShowBones), ""),Bones["left_thigh",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["pelvis",number], noentity(), 0, vec(0.99,69.14,-38.12), ang(0, 0, 0), vec(ShowBones), ""),Bones["right_thigh",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["left_thigh",number], noentity(), 0, vec(0,0,Length1), ang(0, 0, 0), vec(ShowBones), ""),Bones["left_calf",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["right_thigh",number], noentity(), 0, vec(0,0,Length1), ang(0, 0, 0), vec(ShowBones), ""),Bones["right_calf",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["left_calf",number], noentity(), 0, vec(0,0,Length2), ang(0, 0, 0), vec(ShowBones), ""),Bones["left_foot",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["right_calf",number], noentity(), 0, vec(0,0,Length2), ang(0, 0, 0), vec(ShowBones), ""),Bones["right_foot",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["pelvis",number], noentity(), 0, vec(0.99,-69.14,-38.12), ang(0, 0, 0), vec(ShowBones), ""),Bones["LeftRotationParentID",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["pelvis",number], noentity(), 0, vec(0.99,69.14,-38.12), ang(0, 0, 0), vec(ShowBones), ""),Bones["RightRotationParentID",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["torso",number], noentity(), 0, vec(-120.27,152.4,107.49), ang(0, 0, 0), vec(ShowBones), ""),Bones["LeftBackWeaponID",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["torso",number], noentity(), 0, vec(-120.27,-152.4,107.49), ang(0, 0, 0), vec(ShowBones), ""),Bones["RightBackWeaponID",number]=I
    
    function void think(){
        holoAng(Bones["LeftBackWeaponID",number],holoEntity(Bones["LeftBackWeaponID",number]):parent():toWorld(ang(-10-35*(FoldVal+FoldVal2)/2,0,0)*!Mouse3+ang(clamp(holoEntity(Bones["LeftBackWeaponJointID",number]):toLocal(CamAng):pitch(),-65,35),0,0)*Mouse3))
        holoAng(Bones["RightBackWeaponID",number],holoEntity(Bones["RightBackWeaponID",number]):parent():toWorld(ang(-10-35*(FoldVal+FoldVal2)/2,0,0)*!Mouse4+ang(clamp(holoEntity(Bones["RightBackWeaponJointID",number]):toLocal(CamAng):pitch(),-65,35),0,0)*Mouse4))
        
        holoAng(Bones["left_shoulder",number],holoEntity(Bones["torso",number]):toWorld(ang((holoEntity(Bones["torso",number]):toLocal(CamAng):pitch()-40)*Mouse1,0,15):rotateAroundAxis(vec(0,1,0),15)))
        holoAng(Bones["right_shoulder",number],holoEntity(Bones["torso",number]):toWorld(ang((holoEntity(Bones["torso",number]):toLocal(CamAng):pitch()-40)*Mouse2,0,-15):rotateAroundAxis(vec(0,1,0),15)))
        
        holoAng(Bones["left_upperarm",number],holoEntity(Bones["torso",number]):toWorld(ang((holoEntity(Bones["torso",number]):toLocal(CamAng):pitch()-40)*Mouse1,holoEntity(Bones["torso",number]):toLocal(CamAng):yaw()*Mouse1+15*(1-Mouse1),30):rotateAroundAxis(vec(0,1,0),15)))
        holoAng(Bones["right_upperarm",number],holoEntity(Bones["torso",number]):toWorld(ang((holoEntity(Bones["torso",number]):toLocal(CamAng):pitch()-40)*Mouse2,holoEntity(Bones["torso",number]):toLocal(CamAng):yaw()*Mouse2-15*(1-Mouse2),-30):rotateAroundAxis(vec(0,1,0),15)))
        
        holoAng(Bones["left_forearm",number],slerp(quat(holoEntity(Bones["left_upperarm",number]):toWorld(ang(-65,0,0))),quat(holoEntity(Bones["left_upperarm",number]):toWorld(holoEntity(Bones["left_upperarm",number]):toLocal(CamAng):setRoll(0)+ang(-90,0,0))),Mouse1):toAngle())
        holoAng(Bones["right_forearm",number],slerp(quat(holoEntity(Bones["right_upperarm",number]):toWorld(ang(-65,0,0))),quat(holoEntity(Bones["right_upperarm",number]):toWorld(holoEntity(Bones["right_upperarm",number]):toLocal(CamAng):setRoll(0)+ang(-90,0,0))),Mouse2):toAngle())
    }
}
